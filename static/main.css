/* --- 선택지 타일 스타일 --- */

/* 1. 선택지를 감싸는 label의 기본 스타일 */
.option-tile {
  display: block;
  position: relative; /* 내부 요소들의 위치 기준 */
  border: 2px solid #dee2e6; /* 기본 테두리 색상 */
  padding: 1rem 1.25rem;
  border-radius: 0.75rem; /* 12px */
  cursor: pointer;
  transition: border-color 0.2s ease-in-out, background-color 0.2s ease-in-out;
}

/* 2. 마우스를 올렸을 때의 스타일 */
.option-tile:hover {
  border-color: #8b5cf6; /* 연한 보라색 테두리 */
}

/* 3. 실제 라디오/체크박스 input은 화면에서 완전히 숨깁니다. */
.option-tile input {
  position: absolute;
  opacity: 0;
  width: 0;
  height: 0;
}

/* 4. 선택지 텍스트와 이미지 등을 담는 컨테이너 */
/***.tile-content {
    /* 이 클래스는 현재 사용되지 않지만, 나중에 복잡한 구조를 위해 남겨둘 수 있습니다. */
/***}

/* 5. ✨[핵심] input이 선택되었을 때 label의 스타일을 변경합니다. */
.option-tile input:checked ~ .tile-text {
    font-weight: bold;
}

/* input을 포함한 label 전체에 적용하기 위해 JS로 클래스를 추가하는 방식 대신,
   CSS만으로 구현하기 위해 label 자체에 스타일을 적용합니다.
   하지만 input이 자식이라 직접적인 CSS 선택은 어려우므로,
   JS로 클래스를 토글하는 것이 가장 확실합니다.
   하지만 CSS만으로 해결하려면, 아래와 같이 input의 상태에 따라
   label 전체에 영향을 주는 트릭을 사용해야 합니다.
   가장 간단한 방법은 JS를 살짝 추가하는 것이지만, 일단 CSS로만 시도합니다.
*/

/* 가장 안정적인 방법은 JS를 사용하는 것이지만, CSS만으로 시도하기 위해
   :has 선택자를 다시 사용하되, 문제가 되었을 다른 부분을 정리합니다.
   만약 이 코드가 또 깨진다면, 브라우저 호환성 문제일 수 있습니다.
*/
.option-tile:has(input:checked) {
  border-color: #4f46e5;       /* 선택 시 진한 보라색 테두리 */
  background-color: #eef2ff;  /* 선택 시 아주 연한 보라색 배경 */
}


/* --- 문제 관리 페이지 스타일 --- */
.table-warning-custom {
  --bs-table-bg: #fff3cd;
  --bs-table-border-color: #ffe69c;
}

.table-hover > .table-warning-custom:hover {
  --bs-table-hover-bg: #f8e6b3;
}

/* ✨[추가] 결과 페이지 사이드바 현재 문제 강조 스타일 */
#q-nav .btn.active {
    transform: scale(1.1);
    box-shadow: 0 0 0 2px white, 0 0 0 4px var(--bs-btn-bg);
}